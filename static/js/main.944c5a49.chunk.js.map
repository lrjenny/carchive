{"version":3,"sources":["components/App.js","index.js"],"names":["PROPNAMES","App","props","state","local","cars","car_objects","carsbyyear","tabSelected","renderTabs","bind","renderTiles","this","forEach","car","year","push","setState","fetch","then","result","json","data","entries","feed","entry","slice","length","i","value","gs$cell","inputValue","row","process","String","charAt","replace","col","Object","values","catch","e","tabs","key","className","style","background","color","onClick","keys","tiles","collection","src","image","alt","height","name","driver","carnumber","manufacturer","kitnumber","comments","owned","fontWeight","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.944c5a49.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport car_objects from './car_objects.json'\n\nconst PROPNAMES = {\n  \"1\": \"year\",\n  \"2\": \"name\",\n  \"3\": \"driver\",\n  \"4\": \"manufacturer\",\n  \"5\": \"carnumber\",\n  \"6\": \"kitnumber\",\n  \"7\": \"comments\",\n  \"8\": \"owned\",\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      local: false,\n      cars: car_objects,\n      carsbyyear: null,\n      tabSelected: \"All\"\n    }\n\n    this.renderTabs = this.renderTabs.bind(this)\n    this.renderTiles = this.renderTiles.bind(this)\n  }\n\n  componentDidMount() {\n    let carsbyyear = {}\n    this.state.cars.forEach(car => {\n      if(!carsbyyear[car.year]) carsbyyear[car.year] = []\n      carsbyyear[car.year].push(car)\n    })\n    this.setState({carsbyyear})\n    fetch('https://spreadsheets.google.com/feeds/cells/1lU50TWN7S9IkV2rm62Jc7gou2XqGNPnCU2rVIMIW2oM/1/public/full?alt=json')\n    .then(result => result.json())\n    .then(data => {\n      let entries = data.feed.entry.slice(8, data.feed.entry.length)\n      let cars = {}\n      for(let i = 0; i < entries.length; i++) {\n        const entry = entries[i]\n        let value = entry.gs$cell.inputValue\n        if(cars[entry.gs$cell.row]) {\n          if(value === \"TRUE\") value = true\n          else if(value === \"FALSE\") value = false\n        } else {\n          cars[entry.gs$cell.row] = {\"image\" : process.env.PUBLIC_URL + \"/img/\" + entry.gs$cell.row + \".jpg\"}\n        }\n        if(String(value).charAt(0) === \"'\") value = value.replace(\"'\", \"\")\n        cars[entry.gs$cell.row][PROPNAMES[entry.gs$cell.col]] = value\n      }\n      return Object.values(cars)\n    })\n    .then(cars => {\n      let carsbyyear = {}\n      cars.forEach(car => {\n        if(!carsbyyear[car.year]) carsbyyear[car.year] = []\n        carsbyyear[car.year].push(car)\n      })\n      this.setState({cars, carsbyyear})\n    })\n    .catch(e => this.setState({cars: car_objects, local: true}))\n  }\n\n  renderTabs(cars, carsbyyear) {\n    let tabs = []\n    tabs.push(\n      <div \n        key=\"Tab-All\"\n        className=\"Tab\" \n        style={this.state.tabSelected === \"All\" ? {background: '#e3cc22', color: '#04151F'} : null}\n        onClick={() => this.setState({tabSelected: \"All\"})}\n      >\n        All\n      </div>\n      )\n    if(carsbyyear) {\n      Object.keys(carsbyyear).forEach(year => {\n        tabs.push(\n        <div \n          key={\"Tab-\"+year}\n          className=\"Tab\"\n          style={this.state.tabSelected === year ? {background: '#e3cc22', color: '#04151F'} : null}\n          onClick={() => this.setState({tabSelected: year})}\n        >\n          {year}\n        </div>\n        )\n      })\n    }\n    return tabs\n  }\n\n  renderTiles() {\n    let tiles = []\n    if(this.state.cars && this.state.carsbyyear) {\n      let collection = this.state.carsbyyear[this.state.tabSelected]\n      if(this.state.tabSelected === \"All\") collection = this.state.cars\n      for(let i = 0; i < collection.length; i++) {\n        const car = collection[i]\n        tiles.push(\n          <div className=\"CarTile\" key={\"CarTile-\"+i}>\n            <div className=\"CarTileContent\">\n        <div className=\"CarTileImage\">{<img src={car.image} alt=\"\" height=\"100%\"/>}</div>\n              <div className=\"CarTileText\">\n                <div className=\"CarTileTitle\">{car.name}</div>\n                <div>{car.year}</div>\n                <div>{car.driver}</div>\n                <div>#{car.carnumber}</div>\n                <div>{car.manufacturer}{car.kitnumber ? \" - \" + car.kitnumber : null}</div>\n                <div>{car.comments ? '\"'+car.comments+'\"' : null}</div>\n                <div>{\n                  car.owned \n                  ? <span>Owned <span style={{color: \"green\"}}>âœ“</span></span>\n                  : <span style={{color: \"red\", fontWeight: \"bold\"}}>Not Owned</span>\n                }</div>\n              </div>\n            </div>\n          </div>\n        )\n      }\n    }\n    return tiles\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"HeaderBox\">\n          <div className=\"TitleBox\">\n            Carchive\n            <div className=\"SubTitleBox\">\n              A comprehensive list of all the 1/43 Can Am model kits Craig Jenny owns.\n            </div>\n          </div>\n          <div className=\"TabBox\">\n            {this.renderTabs(this.state.cars, this.state.carsbyyear)}\n          </div>\n        </div>\n        <div className=\"Content\">\n          {this.renderTiles()}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}